requires "edsl.md"

module VERITOKEN-BIN-RUNTIME
    imports public EDSL
    
    syntax Contract ::= VeriTokenContract
    
    syntax VeriTokenContract ::= "VeriToken" [symbol(), klabel(contract_VeriToken)]
    
    rule  ( #binRuntime ( VeriToken ) => #parseByteStack ( "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610228578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806342966c68146101be57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e99190610ec2565b60405180910390f35b61010c60048036038101906101079190610f7d565b610366565b6040516101199190610fd8565b60405180910390f35b61012a610389565b6040516101379190611002565b60405180910390f35b61015a6004803603810190610155919061101d565b610393565b6040516101679190610fd8565b60405180910390f35b6101786103c2565b604051610185919061108c565b60405180910390f35b6101a860048036038101906101a39190610f7d565b6103cb565b6040516101b59190610fd8565b60405180910390f35b6101d860048036038101906101d391906110a7565b610402565b005b6101f460048036038101906101ef91906110d4565b61040f565b6040516102019190611002565b60405180910390f35b610212610457565b60405161021f9190610ec2565b60405180910390f35b610242600480360381019061023d91906110a7565b6104e9565b005b61025e60048036038101906102599190610f7d565b6104f6565b60405161026b9190610fd8565b60405180910390f35b61028e60048036038101906102899190610f7d565b61056d565b60405161029b9190610fd8565b60405180910390f35b6102be60048036038101906102b99190611101565b610590565b6040516102cb9190611002565b60405180910390f35b6060600380546102e390611170565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611170565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600080610371610617565b905061037e81858561061f565b600191505092915050565b6000600254905090565b60008061039e610617565b90506103ab8582856107e8565b6103b6858585610874565b60019150509392505050565b60006006905090565b6000806103d6610617565b90506103f78185856103e88589610590565b6103f291906111d0565b61061f565b600191505092915050565b61040c3382610af3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046690611170565b80601f016020809104026020016040519081016040528092919081815260200182805461049290611170565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b6104f33382610cc9565b50565b600080610501610617565b9050600061050f8286610590565b905083811015610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90611276565b60405180910390fd5b610561828686840361061f565b60019250505092915050565b600080610578610617565b9050610585818585610874565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590611308565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f49061139a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107db9190611002565b60405180910390a3505050565b60006107f48484610590565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461086e5781811015610860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085790611406565b60405180910390fd5b61086d848484840361061f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da90611498565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610952576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109499061152a565b60405180910390fd5b61095d838383610e28565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da906115bc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a7691906111d0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ada9190611002565b60405180910390a3610aed848484610e2d565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b599061164e565b60405180910390fd5b610b6e82600083610e28565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610beb906116e0565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610c4b9190611700565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cb09190611002565b60405180910390a3610cc483600084610e2d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611780565b60405180910390fd5b610d4460008383610e28565b8060026000828254610d5691906111d0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dab91906111d0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e109190611002565b60405180910390a3610e2460008383610e2d565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e6c578082015181840152602081019050610e51565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e9482610e32565b610e9e8185610e3d565b9350610eae818560208601610e4e565b610eb781610e78565b840191505092915050565b60006020820190508181036000830152610edc8184610e89565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1482610ee9565b9050919050565b610f2481610f09565b8114610f2f57600080fd5b50565b600081359050610f4181610f1b565b92915050565b6000819050919050565b610f5a81610f47565b8114610f6557600080fd5b50565b600081359050610f7781610f51565b92915050565b60008060408385031215610f9457610f93610ee4565b5b6000610fa285828601610f32565b9250506020610fb385828601610f68565b9150509250929050565b60008115159050919050565b610fd281610fbd565b82525050565b6000602082019050610fed6000830184610fc9565b92915050565b610ffc81610f47565b82525050565b60006020820190506110176000830184610ff3565b92915050565b60008060006060848603121561103657611035610ee4565b5b600061104486828701610f32565b935050602061105586828701610f32565b925050604061106686828701610f68565b9150509250925092565b600060ff82169050919050565b61108681611070565b82525050565b60006020820190506110a1600083018461107d565b92915050565b6000602082840312156110bd576110bc610ee4565b5b60006110cb84828501610f68565b91505092915050565b6000602082840312156110ea576110e9610ee4565b5b60006110f884828501610f32565b91505092915050565b6000806040838503121561111857611117610ee4565b5b600061112685828601610f32565b925050602061113785828601610f32565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061118857607f821691505b60208210810361119b5761119a611141565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111db82610f47565b91506111e683610f47565b92508282019050808211156111fe576111fd6111a1565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611260602583610e3d565b915061126b82611204565b604082019050919050565b6000602082019050818103600083015261128f81611253565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006112f2602483610e3d565b91506112fd82611296565b604082019050919050565b60006020820190508181036000830152611321816112e5565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611384602283610e3d565b915061138f82611328565b604082019050919050565b600060208201905081810360008301526113b381611377565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006113f0601d83610e3d565b91506113fb826113ba565b602082019050919050565b6000602082019050818103600083015261141f816113e3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611482602583610e3d565b915061148d82611426565b604082019050919050565b600060208201905081810360008301526114b181611475565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611514602383610e3d565b915061151f826114b8565b604082019050919050565b6000602082019050818103600083015261154381611507565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006115a6602683610e3d565b91506115b18261154a565b604082019050919050565b600060208201905081810360008301526115d581611599565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611638602183610e3d565b9150611643826115dc565b604082019050919050565b600060208201905081810360008301526116678161162b565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006116ca602283610e3d565b91506116d58261166e565b604082019050919050565b600060208201905081810360008301526116f9816116bd565b9050919050565b600061170b82610f47565b915061171683610f47565b925082820390508181111561172e5761172d6111a1565b5b92915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061176a601f83610e3d565b915061177582611734565b602082019050919050565b600060208201905081810360008301526117998161175d565b905091905056fea26469706673582212201733bdf83e7ddb3feaa31e195341db42455fd18aad9facf302fae384e3be19e964736f6c63430008110033" ) )
      
    
    syntax Field ::= VeriTokenField
    
    syntax VeriTokenField ::= "_balances" [symbol(), klabel(field_VeriToken__balances)]
    
    syntax VeriTokenField ::= "_allowances" [symbol(), klabel(field_VeriToken__allowances)]
    
    syntax VeriTokenField ::= "_totalSupply" [symbol(), klabel(field_VeriToken__totalSupply)]
    
    syntax VeriTokenField ::= "_name" [symbol(), klabel(field_VeriToken__name)]
    
    syntax VeriTokenField ::= "_symbol" [symbol(), klabel(field_VeriToken__symbol)]
    
    rule  ( #loc ( VeriToken . _balances ) => 0 )
      
    
    rule  ( #loc ( VeriToken . _allowances ) => 1 )
      
    
    rule  ( #loc ( VeriToken . _totalSupply ) => 2 )
      
    
    rule  ( #loc ( VeriToken . _name ) => 3 )
      
    
    rule  ( #loc ( VeriToken . _symbol ) => 4 )
      
    
    syntax ByteArray ::= VeriTokenContract "." VeriTokenMethod [function(), symbol(), klabel(method_VeriToken)]
    
    syntax VeriTokenMethod ::= "allowance" "(" Int "," Int ")" [symbol(), klabel(method_VeriToken_allowance)]
    
    syntax VeriTokenMethod ::= "approve" "(" Int "," Int ")" [symbol(), klabel(method_VeriToken_approve)]
    
    syntax VeriTokenMethod ::= "balanceOf" "(" Int ")" [symbol(), klabel(method_VeriToken_balanceOf)]
    
    syntax VeriTokenMethod ::= "burn" "(" Int ")" [symbol(), klabel(method_VeriToken_burn)]
    
    syntax VeriTokenMethod ::= "decimals" "(" ")" [symbol(), klabel(method_VeriToken_decimals)]
    
    syntax VeriTokenMethod ::= "decreaseAllowance" "(" Int "," Int ")" [symbol(), klabel(method_VeriToken_decreaseAllowance)]
    
    syntax VeriTokenMethod ::= "increaseAllowance" "(" Int "," Int ")" [symbol(), klabel(method_VeriToken_increaseAllowance)]
    
    syntax VeriTokenMethod ::= "mint" "(" Int ")" [symbol(), klabel(method_VeriToken_mint)]
    
    syntax VeriTokenMethod ::= "name" "(" ")" [symbol(), klabel(method_VeriToken_name)]
    
    syntax VeriTokenMethod ::= "symbol" "(" ")" [symbol(), klabel(method_VeriToken_symbol)]
    
    syntax VeriTokenMethod ::= "totalSupply" "(" ")" [symbol(), klabel(method_VeriToken_totalSupply)]
    
    syntax VeriTokenMethod ::= "transfer" "(" Int "," Int ")" [symbol(), klabel(method_VeriToken_transfer)]
    
    syntax VeriTokenMethod ::= "transferFrom" "(" Int "," Int "," Int ")" [symbol(), klabel(method_VeriToken_transferFrom)]
    
    rule  ( VeriToken . allowance ( V0_owner , V1_spender ) => #abiCallData ( "allowance" , #address ( V0_owner ) , #address ( V1_spender ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_owner )
       andBool ( #rangeAddress ( V1_spender )
               ))
      
    
    rule  ( VeriToken . approve ( V0_spender , V1_amount ) => #abiCallData ( "approve" , #address ( V0_spender ) , #uint256 ( V1_amount ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_spender )
       andBool ( #rangeUInt ( 256 , V1_amount )
               ))
      
    
    rule  ( VeriToken . balanceOf ( V0_account ) => #abiCallData ( "balanceOf" , #address ( V0_account ) , .TypedArgs ) )
       ensures #rangeAddress ( V0_account )
      
    
    rule  ( VeriToken . burn ( V0_amount ) => #abiCallData ( "burn" , #uint256 ( V0_amount ) , .TypedArgs ) )
       ensures #rangeUInt ( 256 , V0_amount )
      
    
    rule  ( VeriToken . decimals ( ) => #abiCallData ( "decimals" , .TypedArgs ) )
      
    
    rule  ( VeriToken . decreaseAllowance ( V0_spender , V1_subtractedValue ) => #abiCallData ( "decreaseAllowance" , #address ( V0_spender ) , #uint256 ( V1_subtractedValue ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_spender )
       andBool ( #rangeUInt ( 256 , V1_subtractedValue )
               ))
      
    
    rule  ( VeriToken . increaseAllowance ( V0_spender , V1_addedValue ) => #abiCallData ( "increaseAllowance" , #address ( V0_spender ) , #uint256 ( V1_addedValue ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_spender )
       andBool ( #rangeUInt ( 256 , V1_addedValue )
               ))
      
    
    rule  ( VeriToken . mint ( V0_amount ) => #abiCallData ( "mint" , #uint256 ( V0_amount ) , .TypedArgs ) )
       ensures #rangeUInt ( 256 , V0_amount )
      
    
    rule  ( VeriToken . name ( ) => #abiCallData ( "name" , .TypedArgs ) )
      
    
    rule  ( VeriToken . symbol ( ) => #abiCallData ( "symbol" , .TypedArgs ) )
      
    
    rule  ( VeriToken . totalSupply ( ) => #abiCallData ( "totalSupply" , .TypedArgs ) )
      
    
    rule  ( VeriToken . transfer ( V0_to , V1_amount ) => #abiCallData ( "transfer" , #address ( V0_to ) , #uint256 ( V1_amount ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_to )
       andBool ( #rangeUInt ( 256 , V1_amount )
               ))
      
    
    rule  ( VeriToken . transferFrom ( V0_from , V1_to , V2_amount ) => #abiCallData ( "transferFrom" , #address ( V0_from ) , #address ( V1_to ) , #uint256 ( V2_amount ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_from )
       andBool ( #rangeAddress ( V1_to )
       andBool ( #rangeUInt ( 256 , V2_amount )
               )))
      
    
    rule  ( selector ( "allowance" ) => 3714247998 )
      
    
    rule  ( selector ( "approve" ) => 157198259 )
      
    
    rule  ( selector ( "balanceOf" ) => 1889567281 )
      
    
    rule  ( selector ( "burn" ) => 1117154408 )
      
    
    rule  ( selector ( "decimals" ) => 826074471 )
      
    
    rule  ( selector ( "decreaseAllowance" ) => 2757214935 )
      
    
    rule  ( selector ( "increaseAllowance" ) => 961581905 )
      
    
    rule  ( selector ( "mint" ) => 2691771752 )
      
    
    rule  ( selector ( "name" ) => 117300739 )
      
    
    rule  ( selector ( "symbol" ) => 2514000705 )
      
    
    rule  ( selector ( "totalSupply" ) => 404098525 )
      
    
    rule  ( selector ( "transfer" ) => 2835717307 )
      
    
    rule  ( selector ( "transferFrom" ) => 599290589 )
      

endmodule

module MAIN
    imports public VERITOKEN-BIN-RUNTIME
    
    

endmodule

module SPEC
    
    
    

endmodule

